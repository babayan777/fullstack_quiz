{"ast":null,"code":"var _jsxFileName = \"/Users/gagikbabayan/Desktop/backend/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport quizData from './data.json';\nimport Question from \"./components/Question\";\nimport Start from './components/Start';\nimport End from './components/End';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [step, setStep] = useState(1);\n  const [activeQuestion, setActiveQuestion] = useState(0);\n  const [answers, setAnswers] = useState([]);\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  const quizStartHandler = () => {\n    setStep(2);\n  };\n\n  const resetClickHandler = () => {\n    setActiveQuestion(0);\n    setAnswers([]);\n    setStep(2);\n  };\n\n  useEffect(() => {\n    const handleRequest = async () => {\n      try {\n        const res = await fetch('/todos');\n        console.info('RESPONSE', await res.clone().json());\n        const data = await res.json();\n        setData([...data]);\n        setLoading(false);\n      } catch (e) {\n        console.error('failed to fetch', e);\n      }\n    };\n\n    handleRequest();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App wrapper\",\n    children: [step === 1 && /*#__PURE__*/_jsxDEV(Start, {\n      onQuizStart: quizStartHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 22\n    }, this), step === 2 && !loading && /*#__PURE__*/_jsxDEV(Question, {\n      data: data[activeQuestion],\n      onAnswerUpdate: setAnswers,\n      numberOfQuestion: data.length,\n      activeQuestion: activeQuestion,\n      onSetActiveQuestion: setActiveQuestion,\n      onSetStep: setStep\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 34\n    }, this), step === 3 && /*#__PURE__*/_jsxDEV(End, {\n      results: answers,\n      data: data,\n      onReset: resetClickHandler,\n      onAnswerCheck: () => {}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"3JV6Ul8p0vcGjvWMKbmvNyTdCHM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/gagikbabayan/Desktop/backend/client/src/App.js"],"names":["React","useState","useEffect","quizData","Question","Start","End","App","step","setStep","activeQuestion","setActiveQuestion","answers","setAnswers","data","setData","loading","setLoading","quizStartHandler","resetClickHandler","handleRequest","res","fetch","console","info","clone","json","e","error","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBR,QAAQ,CAAC,CAAD,CAA/B;AACA,QAAM,CAACS,cAAD,EAAgBC,iBAAhB,IAAqCV,QAAQ,CAAC,CAAD,CAAnD;AACA,QAAM,CAACW,OAAD,EAASC,UAAT,IAAuBZ,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM,CAACa,IAAD,EAAMC,OAAN,IAAkBd,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACe,OAAD,EAASC,UAAT,IAAuBhB,QAAQ,CAAC,IAAD,CAArC;;AACA,QAAMiB,gBAAgB,GAAG,MAAM;AAC7BT,IAAAA,OAAO,CAAC,CAAD,CAAP;AACD,GAFD;;AAIA,QAAMU,iBAAiB,GAAG,MAAM;AAC9BR,IAAAA,iBAAiB,CAAC,CAAD,CAAjB;AACAE,IAAAA,UAAU,CAAC,EAAD,CAAV;AACAJ,IAAAA,OAAO,CAAC,CAAD,CAAP;AACD,GAJD;;AAMAP,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMkB,aAAa,GAAG,YAAU;AAC9B,UAAG;AACD,cAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,QAAD,CAAvB;AACAC,QAAAA,OAAO,CAACC,IAAR,CAAa,UAAb,EAAyB,MAAMH,GAAG,CAACI,KAAJ,GAAYC,IAAZ,EAA/B;AACA,cAAMZ,IAAI,GAAG,MAAMO,GAAG,CAACK,IAAJ,EAAnB;AACAX,QAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,CAAD,CAAP;AACAG,QAAAA,UAAU,CAAC,KAAD,CAAV;AACC,OANH,CAMG,OAAMU,CAAN,EAAQ;AACPJ,QAAAA,OAAO,CAACK,KAAR,CAAc,iBAAd,EAAiCD,CAAjC;AACD;AACJ,KAVD;;AAWAP,IAAAA,aAAa;AACd,GAbQ,EAaP,EAbO,CAAT;AAeA,sBAEE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,eACGZ,IAAI,KAAK,CAAT,iBAAc,QAAC,KAAD;AAAO,MAAA,WAAW,EAAEU;AAApB;AAAA;AAAA;AAAA;AAAA,YADjB,EAEGV,IAAI,KAAK,CAAT,IAAc,CAACQ,OAAf,iBAA0B,QAAC,QAAD;AACzB,MAAA,IAAI,EAAEF,IAAI,CAACJ,cAAD,CADe;AAEzB,MAAA,cAAc,EAAIG,UAFO;AAGzB,MAAA,gBAAgB,EAAIC,IAAI,CAACe,MAHA;AAIzB,MAAA,cAAc,EAAInB,cAJO;AAKzB,MAAA,mBAAmB,EAAIC,iBALE;AAMzB,MAAA,SAAS,EAAIF;AANY;AAAA;AAAA;AAAA;AAAA,YAF7B,EAUGD,IAAI,KAAK,CAAT,iBAAc,QAAC,GAAD;AACb,MAAA,OAAO,EAAEI,OADI;AAEb,MAAA,IAAI,EAAEE,IAFO;AAGb,MAAA,OAAO,EAAEK,iBAHI;AAIb,MAAA,aAAa,EAAE,MAAM,CAAE;AAJV;AAAA;AAAA;AAAA;AAAA,YAVjB;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AAoBD,CAnDD;;GAAMZ,G;;KAAAA,G;AAqDN,eAAeA,GAAf","sourcesContent":["import React, {useState,useEffect} from \"react\";\nimport quizData from './data.json'\nimport Question from \"./components/Question\";\nimport Start from './components/Start'\nimport End from './components/End'\n\nconst App = () => {\n  const [step,setStep] = useState(1);\n  const [activeQuestion,setActiveQuestion] = useState(0);\n  const [answers,setAnswers] = useState([]);\n  const [data,setData]  = useState([]);\n  const [loading,setLoading] = useState(true);\n  const quizStartHandler = () => {\n    setStep(2);\n  }\n\n  const resetClickHandler = () => {\n    setActiveQuestion(0);\n    setAnswers([]);\n    setStep(2);\n  }\n\n  useEffect(() => {\n    const handleRequest = async ()=>{\n      try{\n        const res = await fetch('/todos');\n        console.info('RESPONSE', await res.clone().json())\n        const data = await res.json();\n        setData([...data]);\n        setLoading(false);      \n        }catch(e){\n          console.error('failed to fetch', e)\n        }\n    }\n    handleRequest();\n  },[])\n\n  return (\n\n    <div className=\"App wrapper\">\n      {step === 1 && <Start onQuizStart={quizStartHandler}/>} \n      {step === 2 && !loading && <Question\n        data={data[activeQuestion]}\n        onAnswerUpdate = {setAnswers}\n        numberOfQuestion = {data.length}\n        activeQuestion = {activeQuestion}\n        onSetActiveQuestion = {setActiveQuestion}\n        onSetStep = {setStep}\n      /> } \n      {step === 3 && <End\n        results={answers}\n        data={data}\n        onReset={resetClickHandler}\n        onAnswerCheck={() => {}}\n      />}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}